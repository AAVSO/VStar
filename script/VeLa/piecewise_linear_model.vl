# example VeLa model function

slope(x1:real y1:real x2:real y2:real) : real {
    (y2-y1) / (x2-x1)
}

# piecewise linear model
genf() : function {
 i <- 0

 f(t:real) : real {
  # is time coordinate beyond end of current line segment?
  if t > nth(times i+1) and i < length(times)-1 then {
    i <- i+1 
  }
        
  # obtain coordinates of point at ends of line segment
  t0 <- nth(times i)
  mag0 <- nth(mags i)
  t1 <- nth(times i+1)
  mag1 <- nth(mags i+1)
                
  # create linear model for segment and compute y value
  m <- slope(t1 t0 mag1 mag0)
  c <- mag1 - m*t1
  y <- m*t + c

  y
 }

 f
}

# derivative of model
gendf() : function {
 i <- 0

 df(t:real) : real {
  # is time coordinate beyond end of current line segment?
  if t > nth(times i+1) and i < length(times)-1 then {
    i <- i+1 
  }
        
  # obtain coordinates of point at ends of line segment
  t0 <- nth(times i)
  mag0 <- nth(mags i)
  t1 <- nth(times i+1)
  mag1 <- nth(mags i+1)
                
  # return slope at the coordinate
  slope(t1 t0 mag1 mag0)
 }

 df
}

f <- genf()
df <- gendf()

#println("slope: " slope(nth(times 0)  nth(mags 0) nth(times 1) nth(mags 1)))

series <- "Unspecified"

times <- [0.045 0.141 0.239 0.343 0.44 0.543 0.641 0.741 0.842 0.941 1.0]
#times <- getPhases(series)
#times <- getTimes(series)

mags <- [3.678 3.776 3.866 3.943 4.0 4.062 4.117 4.089 3.883 3.651 3.653]
#mags <- getMags(series)

#println(map(function(n:real):real{n*n} mags))
#println(map(f times))

model is map(f times)
println(model)
scatter("Mean Model" "t" "mag" times mags)
