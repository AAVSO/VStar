<project name="VStar" default="dist" basedir=".">
	<description>
        Ant build file for VStar.
    </description>

	<!-- Set global properties for this build -->

	<property name="src" location="src" />
	<property name="test" location="test" />
	<property name="script" location="script" />
	<property name="plugin" location="plugin" />
	<property name="src_build" location="src/build" />
	<property name="src_build_debug" location="src/build_debug" />
	<property name="test_build" location="test/build" />
	<property name="manifest_file" location="MANIFEST.MF" />
	<property name="dist" location="dist" />
	<property name="dist_debug" location="dist_debug" />
	<property name="dist_mac" location="." />
	<property name="dist_win32" location="." />
	<property name="install_files" location="install-files" />
	<property name="dmg_template" location="${install_files}/vstar-template.dmg" />
	<property name="launch4j_dir" location="/Applications/Development/launch4j" />
	<property name="vstar_volume" location="/Volumes/VStar" />
	<property name="extlib" location="extlib" />
	<property name="ui_resources" location="src/org/aavso/tools/vstar/ui/resources" />
	<property name="test_report" location="test_report" />
	<property name="doc" location="doc" />
	<property name="javadoc" location="doc/vstar_docs" />

	<!-- Task definitions -->
<!--
	<taskdef name="bundleapp" classname="com.oracle.appbundler.AppBundlerTask" classpath="${extlib}/appbundler-1.0.jar" />
-->
	<!--
	<taskdef name="launch4j" classname="net.sf.launch4j.ant.Launch4jTask" classpath="${launch4j_dir}/launch4j.jar
	        :${launch4j_dir}/lib/xstream.jar" />
	-->
	<!-- Classpaths -->

	<path id="build.classpath">
		<fileset dir="${extlib}" includes="*.jar" excludes="junit*.jar"/>
	</path>

	<path id="test.classpath">
		<fileset dir="${extlib}" includes="*.jar" />
		<pathelement location="${dist}/vstar.jar" />
		<pathelement path="${test_build}" />
	</path>
	
	<target name="init">
		<!-- Create the time stamp -->
		<tstamp />

		<!-- Create the build directory structure used by compile and test. -->
		<mkdir dir="${src_build}" />
		<mkdir dir="${src_build_debug}" />
		<mkdir dir="${test_build}" />
		<mkdir dir="${test_report}" />
		<mkdir dir="${dist_mac}" />
		<mkdir dir="${dist_win32}" />
	</target>

	<!-- Build targets -->

	<target name="antlr4" depends="init" description="Generate Java source code from ANTLR VeLa grammar.">
		<java jar="${extlib}/antlr-4.5.3-complete.jar" fork="true">
			<arg value="${src}/org/aavso/tools/vstar/vela/VeLa.g4" />
			<arg value="-o" />
			<arg value="${src}/org/aavso/tools/vstar/vela" />
			<arg value="-listener" />
			<arg value="-visitor" />
			<arg value="-package" />
			<arg value="org.aavso.tools.vstar.vela" />
			<arg value="-encoding" />
			<arg value="UTF-8" />
		</java>
	</target>

	<target name="compile_src" depends="init,antlr4" description="Compile the source">
		<!-- Update svn revision -->
		<exec outputproperty="svn_revision" executable="svnversion" failonerror="true" logError="true">
			<arg value="-n" />
		</exec>
		<copy file="${ui_resources}/RevisionAccessor.java.template" tofile="${ui_resources}/RevisionAccessor.java" overwrite="true" />
		<replace file="${ui_resources}/RevisionAccessor.java" token="@revision@" value="${svn_revision}" />

		<!-- Compile source -->
		<javac compiler="modern" source="1.8" target="1.8" srcdir="${src}" destdir="${src_build}" includeantruntime="false">
			<classpath refid="build.classpath" />
		</javac>
	</target>

	<target name="debug" depends="init, manifest" description="Compile the source for debug">
		<!-- Compile source. -->
		<javac compiler="modern" source="1.8" target="1.8" srcdir="${src}" destdir="${src_build_debug}" debug="on" debuglevel="lines,vars,source">
			<classpath refid="build.classpath" />
		</javac>

		<mkdir dir="${dist_debug}" />

		<jar jarfile="${dist_debug}/vstar.jar" basedir="${src_build_debug}" manifest="${manifest_file}" excludes="**/external/plugin/*.class">
			<fileset dir="${ui_resources}" />
		</jar>

		<delete file="${manifest_file}" />
	</target>

	<target name="manifest" description="Creates a manifest file for VStar">
		<manifestclasspath property="jar.classpath" jarfile="${dist}/vstar.jar">
			<classpath refid="build.classpath" />
		</manifestclasspath>

		<manifest file="${manifest_file}">
			<attribute name="Application-Name" value="VStar" />
			<attribute name="Manifest-Version" value="1.0" />
			<attribute name="Created-By" value="${user.name}" />
			<attribute name="Main-Class" value="org.aavso.tools.vstar.ui.VStar" />
			<attribute name="Class-Path" value="${jar.classpath}" />
			<attribute name="Permissions" value="all-permissions" />
			<!--
            <attribute name="Codebase" value="http://www.aavso.org/files/vstar/" />
            -->
		</manifest>
	</target>

	<target name="dist" depends="compile_src, manifest" description="Generate the distribution">
		<mkdir dir="${dist}" />

		<jar jarfile="${dist}/vstar.jar" basedir="${src_build}" manifest="${manifest_file}" excludes="**/external/plugin/*.class">
			<fileset dir="${ui_resources}" />
		</jar>

		<delete file="${manifest_file}" />
	</target>

	<target name="bash" depends="dist" description="Create a standalone distribution archive for bash">
		<zip destfile="vstar-bash.zip">
			<zipfileset dir="${dist}" prefix="vstar/dist" />
			<zipfileset dir="${extlib}" prefix="vstar/extlib">
				<include name="vstar.jar" />
				<include name="commons-math-2.2.jar" />
				<include name="javacsv.jar" />
				<include name="jcommon-1.0.16.jar" />
				<include name="jfreechart-1.0.13.jar" />
				<include name="jmathplot.jar" />
				<include name="antlr-runtime-4.5.3.jar" />
				<include name="nico-camargo-toolbar-icons-4.0.jar" />
				<include name="vstaricon.png" />
			</zipfileset>
			<zipfileset file="VStar.sh" prefix="vstar" filemode="755" />
			<zipfileset dir="data" prefix="vstar/data" />
			<zipfileset dir="${doc}" prefix="vstar/doc">
				<include name="license/*" />
			</zipfileset>
			<zipfileset dir="${doc}" prefix="vstar/doc">
				<include name="vstar_docs/*" />
			</zipfileset>
			<zipfileset file="${doc}/user_manual/VStarUserManual.pdf" prefix="vstar/doc" />
			<zipfileset file="${plugin}/doc/vstar_plugin_dev.pdf" prefix="vstar/doc" />
			<zipfileset dir="${plugin}/plugin-dev" prefix="vstar/plugin-dev" />
			<zipfileset file="src/org/aavso/tools/vstar/ui/resources/icons/vstaricon.png" prefix="vstar/doc" />
			<zipfileset file="ReadMe.txt" prefix="vstar" />
			<zipfileset file="ChangeLog.txt" prefix="vstar" />
		</zip>
	</target>

	<target name="win" depends="dist" description="Create a standalone distribution archive for Win32">
		<!--
		<launch4j configFile="${install_files}/vstar-launch4j.xml" />
		-->
		<zip destfile="vstar-win.zip">
			<zipfileset dir="${dist}" prefix="vstar/dist" />
			<zipfileset dir="${extlib}" prefix="vstar/extlib">
				<include name="vstar.jar" />
				<include name="commons-math-2.2.jar" />
				<include name="javacsv.jar" />
				<include name="jcommon-1.0.16.jar" />
				<include name="jfreechart-1.0.13.jar" />
				<include name="jmathplot.jar" />
				<include name="antlr-runtime-4.5.3.jar" />
				<include name="nico-camargo-toolbar-icons-4.0.jar" />
				<include name="vstaricon.png" />
			</zipfileset>
			<zipfileset file="${install_files}/VStar.exe" prefix="vstar" />
			<zipfileset file="${install_files}/VStar.bat" prefix="vstar" />
			<zipfileset file="${install_files}/VeLa.bat" prefix="vstar" />
			<zipfileset dir="data" prefix="vstar/data" />
			<zipfileset dir="${doc}" prefix="vstar/doc">
				<include name="license/*" />
			</zipfileset>
			<zipfileset dir="${doc}" prefix="vstar/doc">
				<include name="vstar_docs/*" />
			</zipfileset>
			<zipfileset file="${doc}/user_manual/VStarUserManual.pdf" prefix="vstar/doc" />
			<zipfileset file="${plugin}/doc/vstar_plugin_dev.pdf" prefix="vstar/doc" />
			<zipfileset dir="${plugin}/plugin-dev" prefix="vstar/plugin-dev" />
			<zipfileset file="src/org/aavso/tools/vstar/ui/resources/icons/vstaricon.png" prefix="vstar/doc" />
			<zipfileset file="ReadMe.txt" prefix="vstar" />
			<zipfileset file="ChangeLog.txt" prefix="vstar" />
		</zip>
	</target>

	<target name="mac" depends="dist" description="Create a standalone distribution archive for Mac">
		<echo message="bundling" />
		<bundleapp outputdirectory="${dist_mac}" name="VStar" displayname="VStar" identifier="org.aavso.tools.vstar.ui.VStar" mainclassname="org.aavso.tools.vstar.ui.VStar" icon="${install_files}/vstaricon.icns">
			<classpath file="${dist}/vstar.jar" />
			<classpath file="${extlib}/commons-math-2.2.jar" />
			<classpath file="${extlib}/javacsv.jar" />
			<classpath file="${extlib}/jcommon-1.0.16.jar" />
			<classpath file="${extlib}/jfreechart-1.0.13.jar" />
			<classpath file="${extlib}/jmathplot.jar" />
			<classpath file="${extlib}/antlr-runtime-4.5.3.jar" />
			<classpath file="${extlib}/nico-camargo-toolbar-icons-4.0.jar" />
			<classpath file="${extlib}/vstaricon.png" />
			<option value="-Xms800m" />
			<option value="-Xmx1500m" />
			<!-- APP_ROOT will be replaced by absolute path to app bundle. -->
			<option value="-splash:$APP_ROOT/Contents/Java/vstaricon.png" />
			<!-- I suspect this won't have any effect unless a Mac app can
			     also be run via the command-line. -->
			<argument value="$*" />
		</bundleapp>

		<echo message="codesign: signing" />
		<exec executable="codesign">
			<arg value="-s" />
			<arg value="Developer ID Application: David Benn" />
			<arg value="${dist_mac}/VStar.app" />
		</exec>

		<echo message="codesign: verifying" />
		<exec executable="codesign">
			<arg value="-d" />
			<arg value="--verbose=4" />
			<arg value="${dist_mac}/VStar.app" />
		</exec>

		<echo message="spctl" />
		<exec executable="spctl">
			<arg value="--assess" />
			<arg value="--verbose=4" />
			<arg value="--type" />
			<arg value="execute" />
			<arg value="${dist_mac}/VStar.app" />
		</exec>
		<echo message="create disk image: attaching" />
		<exec executable="hdiutil">
			<arg value="attach" />
			<arg value="${dmg_template}" />
		</exec>
		<echo message="create disk image: preparing" />
		<delete dir="${vstar_volume}/Extras" />

		<echo message="create disk image: copying files" />
		<delete dir="${vstar_volume}/VStar.app" />
		<exec executable="cp">
			<arg value="-r" />
			<arg value="${dist_mac}/VStar.app" />
			<arg value="${vstar_volume}" />
		</exec>
		<mkdir dir="${vstar_volume}/Extras" />
		<copy todir="${vstar_volume}/Extras">
			<fileset file="ReadMe.txt" />
			<fileset file="ChangeLog.txt" />
		</copy>
		<mkdir dir="${vstar_volume}/Extras/doc" />
		<copy todir="${vstar_volume}/Extras/doc">
			<fileset dir="${doc}">
				<include name="license/*" />
			</fileset>
			<fileset dir="${doc}">
				<include name="vstar_docs/*" />
			</fileset>
			<fileset file="${doc}/user_manual/VStarUserManual.pdf" />
			<fileset file="${plugin}/doc/vstar_plugin_dev.pdf" />
		</copy>
		<mkdir dir="${vstar_volume}/Extras/data" />
		<copy todir="${vstar_volume}/Extras/data">
			<fileset dir="data" />
		</copy>
		<mkdir dir="${vstar_volume}/Extras/plugin-dev" />
		<copy todir="${vstar_volume}/Extras/plugin-dev">
			<fileset dir="${plugin}/plugin-dev" />
		</copy>

		<echo message="create disk image: detaching" />
		<exec executable="hdiutil">
			<arg value="detach" />
			<arg value="${vstar_volume}" />
		</exec>

		<echo message="create disk image: compressing" />
		<exec executable="hdiutil">
			<arg value="convert" />
			<arg value="${dmg_template}" />
			<arg value="-quiet" />
			<arg value="-format" />
			<arg value="UDZO" />
			<arg value="-imagekey" />
			<arg value="zlib-level=9" />
			<arg value="-o" />
			<arg value="${dist_mac}/vstar-mac.dmg" />
		</exec>
	</target>

	<!-- Run targets -->

	<target name="run" depends="dist" description="Run VStar GUI">
		<java fork="true" jar="${dist}/vstar.jar">
			<jvmarg value="-ea" />
		</java>
	</target>

	<target name="run_debug" depends="debug" description="Run debug VStar GUI">
		<java jar="${dist_debug}/vstar.jar" fork="true">
			<sysproperty key="DEBUG" value="true" />
			<arg value="-h" />
			<jvmarg value="-Xrunjdwp:transport=dt_socket,address=8000,server=y,suspend=y" />
			<jvmarg value="-ea" />
		</java>
	</target>

	<!-- Unit test targets -->

	<target name="compile_ut" depends="dist" description="Compile the test code">
		<javac compiler="modern" source="1.8" target="1.8" srcdir="${test}" destdir="${test_build}">
			<classpath refid="test.classpath" />
		</javac>
	</target>

	<target name="test" depends="compile_ut" description="Run unit tests">

		<!-- Run the tests. -->

		<junit fork="yes" printsummary="withOutAndErr" showoutput="true">
			<formatter type="plain" />

			<jvmarg value="-ea" />

			<formatter type="plain" />

			<test name="${testcase}" todir="${test_report}" if="testcase" />

			<batchtest todir="${test_report}" unless="testcase">
				<fileset dir="${test}">
					<include name="**/*Test.java" />
				</fileset>
			</batchtest>

			<classpath refid="test.classpath" />
		</junit>

		<!-- Generate a summary report file to make it easier to spot failures. -->

		<concat destfile="${test_report}/summary.txt">
			<header filtering="no" trimleading="yes">
		          Test Summary
		          ============
		    </header>
			<path>
				<fileset dir="${test_report}" includes="TEST-*" />
			</path>
			<filterchain>
				<linecontains>
					<contains value="Tests run:" />
				</linecontains>
			</filterchain>
		</concat>
	</target>

	<!-- Documentation targets -->

	<target name="javadoc" description="Javadoc generation">
		<delete failonerror="false" includeemptydirs="true">
			<fileset dir="${javadoc}" includes="**/*" />
		</delete>

		<javadoc sourcepath="${src}" destdir="${javadoc}" classpathref="build.classpath" header="VStar" />

		<zip destfile="${doc}/vstar_docs.zip" basedir="${doc}" includes="vstar_docs/**/*" />
	</target>

	<!-- Clean targets -->

	<target name="clean" description="Clean up">
		<delete failonerror="false" includeemptydirs="true">
			<fileset dir="${src_build}" includes="**/*" />
			<fileset dir="${src_build_debug}" includes="**/*" />
			<fileset dir="${test_build}" includes="**/*" />
			<fileset dir="${dist}" includes="**/*" />
			<fileset dir="${test_report}" includes="**/*" />
			<fileset dir="${javadoc}" includes="**/*" />
			<fileset file="${javadoc}.zip" />
			<fileset file="vstar*.zip" />
			<fileset dir="VStar.app" includes="**/*" />
			<dirset dir="VStar.app" />
			<fileset file="*.dmg" />
			<fileset file="*.exe" />
			<fileset file="*.bat" />
		</delete>
	</target>
</project>
